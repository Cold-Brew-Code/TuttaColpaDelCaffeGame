name: Generate and Deploy Javadoc on Merge

# Triggera il workflow solo quando una Pull Request verso 'main' viene chiusa e unita (merged).
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  generate-and-deploy:
    # Questa condizione assicura che il job venga eseguito SOLO se la PR Ã¨ stata effettivamente unita.
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    # Permessi necessari per permettere all'azione di fare un commit e push
    permissions:
      contents: write

    steps:
      # 1. Fa il checkout del codice del branch 'main' dopo il merge
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fa il checkout del branch 'main' per avere l'ultima versione del codice
          ref: main

      # 2. Imposta l'ambiente Java (JDK 21)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      # 3. Esegue il comando Maven per generare la Javadoc
      - name: Generate Javadoc with Maven
        run: mvn clean javadoc:javadoc

      # 4. Esegue il commit e il push dei file generati
      - name: Commit and push Javadoc
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@github.com"
          git add docs
          # Esegue il commit solo se ci sono cambiamenti nella cartella 'docs'
          git diff-index --quiet HEAD || git commit -m "docs: Generate and update Javadoc [ci skip]"
          git push